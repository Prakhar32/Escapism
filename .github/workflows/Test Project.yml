name: Test project (base branch tests only)

on: [push, pull_request]

permissions: write-all

jobs:
  testPlayAndEditModes:
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - playmode
          - editmode
        projectPath: ['.']

    steps:
      # Step 1: Checkout PR or push source (includes code and potentially test logic)
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          lfs: true
          path: pr-code

      # Step 2: Checkout tests from the base branch (trusted test logic)
      - name: Checkout base branch test suite
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
          path: base-tests

      # Step 3: Replace test folder in PR code with trusted base version
      - name: Overwrite test code with base branch tests
        run: |
          rm -rf pr-code/Tests
          cp -r base-tests/Tests pr-code/Tests

      # Step 4: Cache Library folder to speed up builds
      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: pr-code/Library
          key: Library-pr-code
          restore-keys: |
            Library-

      # Step 5: Run Unity tests with trusted test suite
      - name: Run Unity Test Runner
        uses: game-ci/unity-test-runner@v4
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: pr-code
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'

      # Step 6: Upload test results
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}
